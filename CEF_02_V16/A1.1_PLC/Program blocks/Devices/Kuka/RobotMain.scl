FUNCTION_BLOCK "RobotMain"
{ S7_Optimized_Access := 'TRUE' }
VERSION : 0.1
   VAR_OUTPUT 
      RobotInStartingPosition : Bool;
   END_VAR

   VAR 
      R1 : "RobotControl";
      R_TRIG_Instance {InstructionName := 'R_TRIG'; LibVersion := '1.0'} : R_TRIG;
      F_TRIG_Instance {InstructionName := 'F_TRIG'; LibVersion := '1.0'} : F_TRIG;
   END_VAR


BEGIN
	REGION cylinders positions
	    "qR1_MM220grippingTubeInBp" := "DevicesData".Cylinders["MM2200_GrippingTubeFront"].InBp;
	    "qR1_MM220grippingTubeInWp" := "DevicesData".Cylinders["MM2200_GrippingTubeFront"].InWp;
	    "qR1_MM222holdingSidememberInsideInBp" := "DevicesData".Cylinders["MM2220_HoldingSidememberInsideLeft"].InBp;
	    "qR1_MM222holdingSidememberInsideInWp" := "DevicesData".Cylinders["MM2220_HoldingSidememberInsideLeft"].InWp;
	    "qR1_MM224holdingSidememberOutsideInBp" := "DevicesData".Cylinders["MM2240_HoldingSidememberOutsideLeft"].InBp;
	    "qR1_MM224holdingSidememberOutsideInWp" := "DevicesData".Cylinders["MM2240_HoldingSidememberOutsideLeft"].InWp;
	END_REGION
	REGION cylinders control in automat 
	    IF "ModeSelection_DB".mode.activeMode = "mode_2_base" OR
	        "ModeSelection_DB".mode.activeMode = "mode_3_automat" OR
	        "ModeSelection_DB".mode.activeMode = "mode_4_semiautomat"
	    THEN
	        "DevicesData".Cylinders["MM2200_GrippingTubeFront"].ToBp := "iR1_MM220grippingTubeToBp";
	        "DevicesData".Cylinders["MM2200_GrippingTubeFront"].ToWp := "iR1_MM220grippingTubeToWp";
	        "DevicesData".Cylinders["MM2220_HoldingSidememberInsideLeft"].ToBp := "iR1_MM222holdingSidememberInsideToBp";
	        "DevicesData".Cylinders["MM2220_HoldingSidememberInsideLeft"].ToWp := "iR1_MM222holdingSidememberInsideToWp";
	        "DevicesData".Cylinders["MM2240_HoldingSidememberOutsideLeft"].ToBp := "iR1_MM224holdingSidememberOutsideToBp";
	        "DevicesData".Cylinders["MM2240_HoldingSidememberOutsideLeft"].ToWp := "iR1_MM224holdingSidememberOutsideToWp";
	    END_IF;
	 END_REGION
	REGION part present
	    "qR1frontTubePresent" := "iR1tubePresentFront";
	    "qR1rearTubePresent" := "iR1tubePresentRear";
	END_REGION
	REGION type
	    "qR1typeRH" := "DB_ProductionProgramActual".Program.MechanicalType = 1;
	END_REGION
	
	"RobotJob_DB"(OFF_SQ := NOT "DevicesData".R1.Job.Start,
	               INIT_SQ := "DevicesData".R1.Job.Start,
	               ACK_EF:="Alarms".Reset);
	 
	"DevicesData".R1.StartReq := ("SystemHMI".AutomaticMode OR "SystemHMI".GoToBasicPosition) AND "safety_signals"."4L+";
	#R1(StartReq := "DevicesData".R1.StartReq,
	    KeyExt := "DevicesData".R1.StartReq,
	    JobNrReq := "DevicesData".R1.Job.JobNr,
	    periReady := "iR1periReady",
	    stopMess := "iR1stopMess",
	    progAct := "iR1progAct",
	    onPath := "iR1onPath",
	    ext := "iR1ext",
	    internalEstop := "iR1internalEstop",
	    home := #RobotInStartingPosition,
	    pgNoReq := "iR1pgNoReq",
	    robStopped := "iR1robStopped",
	    jobNrBack := "iR1jobNr",
	    StartAllowed => "DevicesData".R1.StartAllowed,
	    Started => "DevicesData".R1.Started,
	    drivesOn => "qR1drivesOn",
	    confMess => "qR1confMess",
	    ExtStart => "qR1ExtStart",
	    reqHome => "qR1reqHome",
	    reqDoor => "qR1reqDoor",
	    jobNr => "qR1jobNr");
	
	"qR1moveEnable" :=
	("SystemHMI".AutomaticMode OR "SystemHMI".GoToBasicPosition) AND "safety_signals"."4L+" AND "iR1ext" OR
	NOT ("SystemHMI".AutomaticMode OR "SystemHMI".GoToBasicPosition) AND "safety_signals"."3L+" AND NOT "iR1ext";
	
	#RobotInStartingPosition :=
	"iR1home" OR
	"iR1inPickupStartPositionSt2" OR
	"iR1inDropoffStartPositionSt3" OR
	"iR1inPickupStartPositionAutoeject" OR
	"iR1inDropoffStartPositionHanger";
	
	
	
	
	
	
	
END_FUNCTION_BLOCK

