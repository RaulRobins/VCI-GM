FUNCTION_BLOCK "AnalogControl"
{ S7_Optimized_Access := 'TRUE' }
VERSION : 0.1
   VAR_INPUT 
      EditIndex : Int;
      EditIndexOutput : Int;
   END_VAR

   VAR_IN_OUT 
      save : Bool;
      load : Bool;
      saveOutput : Bool;
      loadOutput : Bool;
   END_VAR

   VAR 
      AnalogInputs : Array[1..12] of "AnalogInput";
      Inputs { S7_SetPoint := 'True'} : Array[1..12] of Int;
      edit : Int;
      editedItem { S7_SetPoint := 'False'} : "AnalogInput";
      AnalogOutputs : Array[1..12] of "AnalogOutput";
      editedItemOutput : "AnalogOutput";
   END_VAR

   VAR_TEMP 
      i : Int;
   END_VAR


BEGIN
	//Analog outputs
	#Inputs[3] := "aiCupformingLeft";
	#Inputs[4] := "aiCupformingRight";
	
	"AnalogData".OutputsRequired[1] := "DevicesData".cupformingLeft_cylinder.Flow;
	"AnalogData".OutputsRequired[2] := "DevicesData".cupformingRight_cylinder.Flow;
	"AnalogData".OutputsRequired[5] := "DevicesData".CupformingPressure;
	
	FOR #i:=1 TO 4 DO
	    #AnalogInputs[#i](RawValue := #Inputs[#i],ActualValue=>"AnalogData".InputResults[#i]);
	END_FOR;
	
	#edit := #EditIndex;
	IF #edit < 1 OR #edit > 12 THEN
	    #edit := 1;
	END_IF;
	
	#editedItem(RawValue := #Inputs[#edit]);
	IF #save THEN
	    #AnalogInputs[#edit].c := #editedItem.c;
	    #AnalogInputs[#edit].k := #editedItem.k;
	    #AnalogInputs[#edit].CalibValueA := #editedItem.CalibValueA;
	    #AnalogInputs[#edit].CalibValueB := #editedItem.CalibValueB;
	    #AnalogInputs[#edit].valueA := #editedItem.valueA;
	    #AnalogInputs[#edit].valueB := #editedItem.valueB;
	END_IF;
	
	IF #load THEN
	    #editedItem.c := #AnalogInputs[#edit].c;
	    #editedItem.k := #AnalogInputs[#edit].k;
	    #editedItem.CalibValueA := #AnalogInputs[#edit].CalibValueA;
	    #editedItem.CalibValueB := #AnalogInputs[#edit].CalibValueB;
	    #editedItem.valueA := #AnalogInputs[#edit].valueA;
	    #editedItem.valueB := #AnalogInputs[#edit].valueB;
	END_IF;
	
	#load := false;
	#save := false;
	
	"Cylinders_Commands".VH1.Position:= #AnalogInputs[1].ActualValue;
	"Cylinders_Commands".VH2.Position := #AnalogInputs[2].ActualValue;
	"Cylinders_Commands".VH3.Position := #AnalogInputs[3].ActualValue;
	"Cylinders_Commands".VH4.Position := #AnalogInputs[4].ActualValue;
	
	
	//Analog outputs
	FOR #i := 1 TO 8 DO
	    #AnalogOutputs[#i](ActualValue:="AnalogData".OutputsRequired[#i], RawValue => #Inputs[#i]);
	END_FOR;
	
	#edit := #EditIndexOutput;
	IF #edit < 1 OR #edit > 8 THEN
	    #edit := 1;
	END_IF;
	
	IF "DB_MainData".HMI.ActualScreenNumber = 5015 THEN
	    #editedItemOutput(RawValue => #Inputs[#edit]);
	    #editedItemOutput.MeasurePointA := 0;
	    #editedItemOutput.MeasurePointB := 0;
	    IF #saveOutput THEN
	        #AnalogOutputs[#edit].c := #editedItemOutput.c;
	        #AnalogOutputs[#edit].k := #editedItemOutput.k;
	        #AnalogOutputs[#edit].CalibValueA := #editedItemOutput.CalibValueA;
	        #AnalogOutputs[#edit].CalibValueB := #editedItemOutput.CalibValueB;
	        #AnalogOutputs[#edit].valueA := #editedItemOutput.valueA;
	        #AnalogOutputs[#edit].valueB := #editedItemOutput.valueB;
	    END_IF;
	    
	    IF #loadOutput THEN
	        #editedItemOutput.c := #AnalogOutputs[#edit].c;
	        #editedItemOutput.k := #AnalogOutputs[#edit].k;
	        #editedItemOutput.CalibValueA := #AnalogOutputs[#edit].CalibValueA;
	        #editedItemOutput.CalibValueB := #AnalogOutputs[#edit].CalibValueB;
	        #editedItemOutput.valueA := #AnalogOutputs[#edit].valueA;
	        #editedItemOutput.valueB := #AnalogOutputs[#edit].valueB;
	    END_IF;
	END_IF;
	
	IF ("DB_MainData".HMI.ActualScreenNumber = 5011) OR ("DB_MainData".HMI.ActualScreenNumber = 5013) THEN
	    "qaCupforming1" := "AnalogData".OutputsRequiredHMI[1];
	    "qaCupforming2" := "AnalogData".OutputsRequiredHMI[2];
	    "qaReductionCupforming" := "AnalogData".OutputsRequiredHMI[5];
	ELSE
	    "qaCupforming1" := #Inputs[1];
	    "qaCupforming2" := #Inputs[2];
	    "qaReductionCupforming" := #Inputs[5];
	END_IF;
	#loadOutput := false;
	#saveOutput := false;
	
	
	
END_FUNCTION_BLOCK

